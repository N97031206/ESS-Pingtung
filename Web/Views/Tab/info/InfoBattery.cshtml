@using Service.ESS.Provider;
@using Service.ESS.Model;
@{
    //取最新時間
    ESSObjecterService eSSObjecterService = new ESSObjecterService();
    string EssTime = eSSObjecterService.ReadNow().CreateTime.ToString();
    //取相關資料
    var batteryID = eSSObjecterService.ReadNow().BatteryIDs.Split('|');
    BatteryService BatteryService = new BatteryService();
    List<Battery> batteries = new List<Battery>();
    foreach (var x in batteryID)
    {
        if (!string.IsNullOrEmpty(x))
        {
            Guid id = Guid.Parse(x.Trim());
            batteries.Add(BatteryService.ReadByID(id));
        }
    }
}

<style>
    .line {
        width: auto;
        height: auto;
        border-bottom: 1px solid black;
    }
</style>

<div class="row">
    <!--lift-->
    <div class="col-2 h6">
        @if (batteries != null)
        {
        <div class="row " id="pc0">
            <div class="col font-weight-bold ">資料時間:@EssTime</div>
            @*<div class="col font-italic"></div>*@
            @foreach (var ba in batteries)
            {
                string Info1 = ba.index.ToString();
                string Info2 = string.Format("{0:#,0.00}", ba.voltage);
                string Info3 = string.Format("{0:#,0.00}", ba.charging_current);
                string Info4 = string.Format("{0:#,0.00}", ba.discharging_current);
                string Info5 = string.Format("{0:#,0.00}", BatteryService.EachSOC(ba.voltage));
                string Info6 = string.Format("{0:#,0}", ba.Cycle);
                int cd = Convert.ToInt32(ba.charge_direction);
                string Info7 = (cd == 1) ? "充電" : (cd == 2) ? "放電" : "離線";
                <div class="w-100 line"></div>
                <div class="col font-weight-bold ">電池組 @Info1</div>
                @*<div class="col font-italic"></div>*@
                <div class="w-100"></div>
                <div class="col font-weight-bold small">電池電壓(V)</div>
                <div class="col font-italic">@Info2</div>
                <div class="w-100"></div>
                <div class="col font-weight-bold small">充電電流(A)</div>
                <div class="col font-italic">@Info3</div>
                <div class="w-100"></div>
                <div class="col font-weight-bold small">放電電流(A)</div>
                <div class="col font-italic">@Info4</div>
                <div class="w-100"></div>
                <div class="col font-weight-bold small">電池容量(%)</div>
                <div class="col font-italic">@Info5</div>
                <div class="w-100"></div>
                <div class="col  font-weight-bold small">充電次數(次)</div>
                <div class="col font-italic">@Info6</div>
                <div class="w-100"></div>
                <div class="col font-weight-bold small">充電方向</div>
                <div class="col font-italic">@Info7</div>
            }
        </div>
        }
    </div>
    <!--middle-->
    <div class="col-8">
        <div id="BatteryChart" style="height:500px">
            <script type="text/javascript">
                var dom = document.getElementById("BatteryChart");
                var BatteryChart = echarts.init(dom);
                //時間兩位
                function paddingLeft(str, lenght) {
                    if (str.length >= lenght)
                        return str;
                    else
                        return paddingLeft("0" + str, lenght);
                }
                //X軸座標
                var xData = [];
                var h=@TempData["Batteryhh"];
                var m =@TempData["Batterymm"];
                for (var i = 0; i < 24; i++) {
                    for (var j = 0; j < 60; j = j + 15) {
                        var hh = i;
                        var mm = j;
                        if (h == 0) {
                            if (m > 0) {
                                mm = j + m;
                                if (mm >= 60) {
                                    mm = mm - 60;
                                    hh = hh + 1;
                                }
                            }
                        }
                        if (h > 0) {
                            hh = i + h;
                            if (m > 0) {
                                mm = j + m;
                                if (mm >= 60) {
                                    mm = mm - 60;
                                    hh = hh + 1;
                                }
                            }
                            if (hh >= 24) {
                                hh = hh - 24;
                            }
                        }
                        xData.push(paddingLeft(hh.toString(), 2) + ":" + paddingLeft(mm.toString(), 2));
                    }
                }
                //Y軸座標
                var BatteryData = [];
                BatteryData.push(@TempData["BatteryData"]);
                option = null;
                option = {
                    title: {
                        text: 'SOC平均',
                        textStyle: {
                            fontWeight: 'small',
                            color: 'white'
                        },
                        x: "center"
                    },
                    tooltip: {
                        trigger: 'axis',
                        show: true
                    },
                    grid: {
                        left: '2%',
                        right: '4%',
                        bottom: '1%',
                        containLabel: true
                    },
                    toolbox: {
                        feature: {
                            saveAsImage: {
                                title: '圖檔'
                            }
                        }
                    },
                    xAxis: [
                        {
                            name: '時間',
                            type: 'category',
                            data: xData,
                            axisLine: {
                                lineStyle: {
                                    color: 'gray',
                                    width: 2
                                }
                            },
                            axisLabel: {
                                formatter: '{value}' 
                            }
                        },
                    ],
                    yAxis: [
                        {
                            name: '電池容量平均(%)',
                            type: 'value',
                            axisLine: {
                                lineStyle: {
                                    color: 'gray',
                                    width: 2
                                }
                            },
                            axisLabel: {
                                formatter: '{value}'
                            }
                        }
                    ],
                    series: [
                        {
                            "name": "電池容量平均(%)",
                            "type": "line",
                            "data": BatteryData,
                            areaStyle: {}
                        }
                    ]
                };
                if (option && typeof option === "object") {
                    BatteryChart.setOption(option, true);
                }
            </script>
        </div>
    </div>
    <!--right-->
    <div class="col-2 h3">
        <div class=" bg-light">可用總電量</div>
        <div class="font-italic">@ViewBag.Demand</div>
        <div class="bg-light">可用電時數</div>
        <div class="font-italic">@ViewBag.RemainTime</div>
    </div>
</div>





