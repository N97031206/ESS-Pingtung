@model Service.ESS.Model.Bulletin
@using Service.ESS.Provider;
@{
    ViewBag.Title = "EditBulletin";
    Layout = "~/Views/Shared/_LayoutDetail.cshtml";
    AccountService accountService = new AccountService();
    OrginService orginService = new OrginService();
}

<div class="container">
    <div class="row">
        <div class="col text-left">
            <button type="button" class="btn btn-outline-info btn-lg " onclick="location.href='@Url.Action("ListBulletin", "Tab")'">回到列表</button>
        </div>
        <div class="col text-right">
            <button type="button" class="btn btn-outline-warning btn-lg " onclick="location.href='@Url.Action("Maintain", "Tab")'">回到維護頁</button>
        </div>
    </div>
    <br />
    <div class="card">
        <h class="card-header">編輯使用者</h>
        <div class="card-body text-left">
            @using (Html.BeginForm("EditBulletin", "Tab", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>Bulletin</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.context, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.context, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.context, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UpdateDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdateDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Disabled, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Disabled)
                                @Html.ValidationMessageFor(model => model.Disabled, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrginID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Label(orginService.ReadID(Model.OrginID).OrginName)
                            @*@Html.EditorFor(model => model.OrginID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrginID, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Label(accountService.ReadByID(Model.AccountID).UserName)
                            @*@Html.EditorFor(model => model.AccountID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccountID, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>





