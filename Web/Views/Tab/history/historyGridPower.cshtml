@using PagedList;
@using PagedList.Mvc;
@using Service.ESS.Provider;
@using Service.ESS.Model;
@model IPagedList<Service.ESS.Model.ESSObject>

@{
    GridPowerService gridPowerService = new GridPowerService();
    DateTime startDay = ViewBag.startDay;
    DateTime endDay = ViewBag.endDay;
    string sDay = startDay.ToString();
    string eDay = endDay.ToString();
    string startTime = startDay.ToString("HH:mm:ss");
    string endTime = endDay.ToString("HH:mm:ss");
    string tabType = "GridPower";
    string connStr = tabType + "+" + sDay + "+" + eDay;
    List<string> IDList = new List<string>();
    int x = 1, y = 1, c = 1;
}

<script type="text/javascript">
    function closeGridModel() {
        $('#GridPowerModal').hide();
        $('.modal-backdrop').hide();
    }
</script>

<div class="row" align="center">
    <div class="col text-left">
        <p class="h6">開始時間:@startDay </p>
        <p class="h6">結束時間:@endDay</p>
        <p class="h6">共 @ViewBag.Count 筆資料</p>
    </div>
    @*<div class="col h5">@ViewBag.GridPower</div>*@
    <div class="col ">
        <p>@ViewBag.execlInfo</p>
        <button type="button" class="btn btn-outline-info" data-toggle="modal" data-target="#GridPowerModal" style="float:right">
            Excel
        </button>
        <!--Modal -->
        <div class="modal fade" id="GridPowerModal" tabindex="-1" role="dialog" aria-labelledby="GridPowerModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@tabType</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("XLSX", "Tab", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="modal-body">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadio" id="inlineRadio1" value="option1">
                                    <label class="form-check-label" for="inlineRadio1">當日(00:00起算)</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadio" id="inlineRadio2" value="option2">
                                    <label class="form-check-label" for="inlineRadio2">當月(1日起算)</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadio" id="inlineRadio3" value="option3" checked>
                                    <label class="form-check-label" for="inlineRadio4">區間</label>
                                </div>
                                <br>
                                開始時間:@startDay
                                <br>
                                結束時間:@endDay
                                <input type="hidden" name="startDay" value=@startDay>
                                <input type="hidden" name="endDay" value=@endDay>
                                <input type="hidden" name="startTime" value=@startTime>
                                <input type="hidden" name="endTime" value=@endTime>
                                <input type="hidden" name="tabType" value=@tabType>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary btn-sm" id="btnHGP" onclick="closeGridModel()">匯出EXCEL</button>
                                <button type="button" class="btn btn-secondary  btn-sm" data-dismiss="modal">關閉</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!--Modal -->
    </div>
</div>
<br />
<div class="row">
    <div class="col">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col" style="width:20%">資料時間(UTC)</th>
                    <th scope="col" style="width:10%">電壓(V)</th>
                    <th scope="col" style="width:10%">電流(A)</th>
                    <th scope="col" style="width:10%">實功率(kW)</th>
                    <th scope="col" style="width:10%">虛實功率(kVAR)</th>
                    <th scope="col" style="width:10%">視在功率(kVA)</th>
                    <th scope="col" style="width:10%">功率因數(PF)</th>
                    <th scope="col" style="width:10%">頻率(Hz)</th>
                    <th scope="col" style="width:10%">用電量(kWh)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var gps in Model)
                {

                    if (!string.IsNullOrEmpty(gps.GridPowerIDs))
                    {
                        string T1 = null, T2 = null, T3 = null, T4 = null, T5 = null, T6 = null, T7 = null, T8 = null, T9 = null;
                        string[] IDs = gps.GridPowerIDs.Trim().Split('|');
                        List<string> BtnGroup = new List<string>();
                        int cut = 1;
                        foreach (var gp in IDs)
                        {
                            if (!string.IsNullOrEmpty(gp.Trim()))
                            {
                                Guid ID = Guid.Parse(gp);
                                GridPower gridPowers = gridPowerService.ReadByID(ID);
                                T1 = gridPowers.date_time.ToString();
                                T2 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.Vavg) + "] ";
                                T3 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.Isum) + "] ";
                                T4 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.Watt_t / 1000.0) + "] ";
                                T5 += cut.ToString() + ":[" + string.Format("{0:#,0.00}", gridPowers.Var_t / 1000.00) + "] ";
                                T6 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.VA_t / 1000.0) + "] ";
                                T7 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.PF_t) + "] ";
                                T8 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.Frequency) + "] ";
                                T9 += cut.ToString() + ":[" + string.Format("{0:#,0.0}", gridPowers.kWHt) + "] ";
                                x++;
                                cut++;
                            }
                        }
                        <tr>
                            <th scope="row">@T1</th>
                            <td>@T2</td>
                            <td>@T3</td>
                            <td>@T4</td>
                            <td>@T5</td>
                            <td>@T6</td>
                            <td>@T7</td>
                            <td>@T8</td>
                            <td>@T9</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @if (Model.Count > 0)
        {
            if (!string.IsNullOrEmpty(Model.FirstOrDefault().GridPowerIDs))
            {
                <div>@Html.PagedListPager(Model, Page => Url.Action("/history/historyGridpower", new { connStr, Page }))</div>
            }
        }
    </div>
</div>


