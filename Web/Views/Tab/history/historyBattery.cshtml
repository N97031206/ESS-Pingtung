@using PagedList;
@using PagedList.Mvc;
@using Service.ESS.Provider;
@using Service.ESS.Model;
@model IPagedList<Service.ESS.Model.ESSObject>

@{
    var tabType = "Battery";
    BatteryService batteryService = new BatteryService();
    DateTime startDay = ViewBag.startDay;
    DateTime endDay = ViewBag.endDay;
    string sDay = startDay.ToString();
    string eDay = endDay.ToString();
    string startTime = startDay.ToString("HH:mm:ss");
    string endTime = endDay.ToString("HH:mm:ss");
    string connStr = tabType + "+" + sDay + "+" + eDay;
    List<string> IDList = new List<string>();
    int y = 0 ;
}

<script type="text/javascript">
    function closeBatteryModel() {
        $('#BatteryModal').hide();
        $('.modal-backdrop').hide();
    }
</script>

<div class="row" align="center">
    <div class="col text-left">
        <p class="h6">開始時間:@startDay </p>
        <p class="h6">結束時間:@endDay</p>
        <p class="h6">@ViewBag.StationName ; 共 @ViewBag.Count 筆資料</p>
    </div>
    @*<div class="col h5">@ViewBag.Battery</div>*@
    <div class="col ">
        <button type="button" class="btn btn-outline-info" data-toggle="modal" data-target="#BatteryModal" style="float:right">Excel</button>
        <!--Modal -->
        <div class="modal fade" id="BatteryModal" tabindex="-1" role="dialog" aria-labelledby="BatteryModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@tabType</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("XLSX", "Tab", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="modal-body">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadio" id="inlineRadio1" value="option1">
                                    <label class="form-check-label" for="inlineRadio1">當日(00:00起算)</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadio" id="inlineRadio2" value="option2">
                                    <label class="form-check-label" for="inlineRadio2">當月(1日起算)</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="inlineRadio" id="inlineRadio3" value="option3" checked>
                                    <label class="form-check-label" for="inlineRadio4">區間</label>
                                </div>
                                <br>
                                開始時間:@startDay
                                <br>
                                結束時間:@endDay
                                <input type="hidden" name="startDay" value=@startDay>
                                <input type="hidden" name="endDay" value=@endDay>
                                <input type="hidden" name="startTime" value=@startTime>
                                <input type="hidden" name="endTime" value=@endTime>
                                <input type="hidden" name="tabType" value=@tabType>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary btn-sm" id="btnHGP" onclick="closeBatteryModel()">匯出EXCEL</button>
                                <button type="button" class="btn btn-secondary  btn-sm" data-dismiss="modal">關閉</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!--Modal -->
    </div>
</div>
<br />
<div class="row">
    <div class="col">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col" style="width:10%">資料時間</th>
                    <th scope="col" style="width:8%">平均電池電壓(V)</th>
                    <th scope="col" style="width:8%">總充電電流(A)</th>
                    <th scope="col" style="width:8%">總放電電流(A)</th>
                    <th scope="col" style="width:8%">平均電池容量(%)</th>
                    <th scope="col" style="width:8%">總充電次數(次)</th>
                    <th scope="col" style="width:15%">充電方向</th>
                    <th scope="col" style="width:15%">電池組</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bas in Model)
                {
                    var time = bas.UpdateDate.AddHours(8).ToString();
                    int countBa = 0;
                    if (!string.IsNullOrEmpty(bas.BatteryIDs))
                    {
                        int c = 0;
                        string T6 = null, Timer = null;
                        double T1 = 0, T2 = 0, T3 = 0, T4 = 0, T5 = 0;
                        string[] IDs = bas.BatteryIDs.Trim().Split('|');
                        List<string> BtnGroup = new List<string>();
                        foreach (var ba in IDs)
                        {
                            if (!string.IsNullOrEmpty(ba.Trim()))
                            {
                                Guid ID = Guid.Parse(ba);
                                Battery battery = batteryService.ReadByID(ID);
                                int cd = Convert.ToInt32(battery.charge_direction);
                                string direct = (cd == 0) ? "離線" : (cd == 1) ? "充電" : "放電";
                                IDList.Add(ba.Trim());
                                Timer = time;
                                T1 += battery.voltage;
                                T2 += battery.charging_current;
                                T3 += battery.discharging_current;
                                T4 += batteryService.EachSOC(battery.voltage);
                                T5 += battery.Cycle;
                                T6 += battery.index.ToString() + ":[" + direct + "] ";
                                BtnGroup.Add("cellmodal" + Convert.ToString(battery.index.ToString()));
                                countBa++;
                            }
                        }
                        <tr>
                            <th scope="row">@Timer</th>
                            <td>@Math.Round(T1 / countBa, 2)</td>
                            <td>@Math.Round(T2, 2) </td>
                            <td>@Math.Round(T3, 2) </td>
                            <td>@Math.Round(T4 / countBa, 0)</td>
                            <td>@Math.Round(T5, 0) </td>
                            <td>@T6</td>
                            <td>
                                <div class="btn-group" role="group" aria-label="Basic example">
                                    @foreach (string btn in BtnGroup)
                                    {
                                        string cellName = "Pack" + c;
                                        <button type='button' class='btn btn-info' data-toggle='modal' data-target='#@btn.Trim()'>@cellName</button>
                                        c++;
                                    }
                                </div>
                            </td>
                        </tr>
                        T1 = 0; T2 = 0; T3 = 0; T4 = 0; T5 = 0; T6 = null; Timer = null; BtnGroup.Clear(); c = 0;
                    }
                }
            </tbody>
        </table>
        @if (Model.Count > 0)
        {
            if (!string.IsNullOrEmpty(Model.FirstOrDefault().BatteryIDs))
            {
                <div>@Html.PagedListPager(Model, Page => Url.Action("/history/historyBattery", new { connStr, Page }))</div>
            }
        }
    </div>
</div>

<!-- Modal -->
<div id="cellIDs">
    @foreach (string id in IDList)
    {
        var Cells = batteryService.ReadByID(Guid.Parse(id.Trim()));
                            var cellIndex = Cells.cells_index.Split('|');
                            var cellvolta = Cells.cells_voltage.Split('|');
                            string modal = "cellmodal" + Convert.ToString(y);
        <div class="modal fade" id="@modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        @*<h6 class="modal-title" id="exampleModalLabel">@id.Trim()</h6>*@
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">Cell</th>
                                    <th scope="col">電壓(V)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < cellIndex.Length - 1; i++)
                                {
                                    <tr>
                                        <th scope="row">
                                            @cellIndex[i]
                                        </th>
                                        <td>
                                            @cellvolta[i]
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        y++;
    }
</div>


